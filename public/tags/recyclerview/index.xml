<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RecyclerView on 人生最可悲的事情，莫过于胸怀大志，却又虚度光阴。</title>
    <link>https://malinkang.cn/tags/recyclerview/</link>
    <description>Recent content in RecyclerView on 人生最可悲的事情，莫过于胸怀大志，却又虚度光阴。</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 04 Sep 2020 16:39:09 +0800</lastBuildDate><atom:link href="https://malinkang.cn/tags/recyclerview/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Recyclerview源码分析三</title>
      <link>https://malinkang.cn/post/recyclerview-analysis-3/</link>
      <pubDate>Fri, 04 Sep 2020 16:39:09 +0800</pubDate>
      
      <guid>https://malinkang.cn/post/recyclerview-analysis-3/</guid>
      <description>上一篇分析RecyclerView整体流程的时候提到，RecyclerView缓存机制比较复杂，所以这一篇单独分析一下RecyclerVie</description>
    </item>
    
    <item>
      <title>Recyclerview源码分析二</title>
      <link>https://malinkang.cn/post/recyclerview-analysis-2/</link>
      <pubDate>Thu, 03 Sep 2020 16:39:09 +0800</pubDate>
      
      <guid>https://malinkang.cn/post/recyclerview-analysis-2/</guid>
      <description>&lt;p&gt;在上一篇文章中，我们主要分析了&lt;code&gt;RecyclerView&lt;/code&gt;中的几个重要的内部类。今天我们就把它们串起来，看它们分别是如何工作的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Recyclerview源码分析一</title>
      <link>https://malinkang.cn/post/recyclerview-analysis-1/</link>
      <pubDate>Wed, 02 Sep 2020 16:39:09 +0800</pubDate>
      
      <guid>https://malinkang.cn/post/recyclerview-analysis-1/</guid>
      <description>&lt;p&gt;&lt;code&gt;RecyclerView&lt;/code&gt;是我们开发中最常用的控件，&lt;code&gt;RecyclerView&lt;/code&gt;是如何工作的，如何处理缓存的有助于解决一些使用&lt;code&gt;RecyclerView&lt;/code&gt;的bug和优化&lt;code&gt;RecyclerView&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
